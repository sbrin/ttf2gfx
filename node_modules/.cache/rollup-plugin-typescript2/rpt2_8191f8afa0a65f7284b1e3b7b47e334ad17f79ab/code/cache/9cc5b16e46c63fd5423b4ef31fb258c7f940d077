{"code":"import { __awaiter, __generator } from \"tslib\";\n// import {loadFont, extractGlyphs} from './core/fontLoader';\n// import {rasterizeGlyph, GlyphBitmap} from './core/glyphRasterizer';\n// import {generateAdafruitGfxFont} from './core/fontGenerator';\n// import {createOutputFile} from './core/fileHandler';\nimport { DEFAULT_PIXEL_HEIGHT } from './const';\n/**\n * Converts a font File into an Adafruit_GFX-compatible font File.\n *\n * @param inputFile - The input font File (TTF, OTF, WOFF).\n * @param pixelHeight - Desired font height in pixels. Defaults to 12.\n * @returns A Promise that resolves to the output File containing the Adafruit_GFX font.\n */\nexport function truetype2gfx(inputFile_1) {\n    return __awaiter(this, arguments, void 0, function (inputFile, pixelHeight) {\n        if (pixelHeight === void 0) { pixelHeight = DEFAULT_PIXEL_HEIGHT; }\n        return __generator(this, function (_a) {\n            try {\n                // // Load and parse the font\n                // const font = await loadFont(inputFile);\n                // // Extract relevant glyphs\n                // const glyphs = extractGlyphs(font);\n                // // Rasterize each glyph\n                // const rasterizedGlyphs: GlyphBitmap[] = glyphs.map((glyph) => rasterizeGlyph(glyph, font, pixelHeight));\n                // // Generate Adafruit_GFX font content\n                // const gfxFontContent = generateAdafruitGfxFont(rasterizedGlyphs);\n                // // Create the output File object\n                // const outputFile = createOutputFile(gfxFontContent, 'customFont.h');\n                // return outputFile;\n                console.log('test ok');\n                return [2 /*return*/, new Promise(function () { return new File([], 'test'); })];\n            }\n            catch (error) {\n                throw new Error(\"Font conversion failed: \".concat(error.message));\n            }\n            return [2 /*return*/];\n        });\n    });\n}\n//# sourceMappingURL=index.js.map","references":["/Users/sun/lopaka_cloud/tools/truetype2gfx/src/const.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/index.ts\"],\"names\":[],\"mappings\":\";AAAA,6DAA6D;AAC7D,sEAAsE;AACtE,gEAAgE;AAChE,uDAAuD;AACvD,OAAO,EAAC,oBAAoB,EAAC,MAAM,SAAS,CAAC;AAE7C;;;;;;GAMG;AACH,MAAM,UAAgB,YAAY;wDAAC,SAAe,EAAE,WAA0C;QAA1C,4BAAA,EAAA,kCAA0C;;YAC1F,IAAI,CAAC;gBACD,6BAA6B;gBAC7B,0CAA0C;gBAE1C,6BAA6B;gBAC7B,sCAAsC;gBAEtC,0BAA0B;gBAC1B,2GAA2G;gBAE3G,wCAAwC;gBACxC,oEAAoE;gBAEpE,mCAAmC;gBACnC,uEAAuE;gBAEvE,qBAAqB;gBACrB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;gBACvB,sBAAO,IAAI,OAAO,CAAC,cAAM,OAAA,IAAI,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,EAApB,CAAoB,CAAC,EAAC;YACnD,CAAC;YAAC,OAAO,KAAU,EAAE,CAAC;gBAClB,MAAM,IAAI,KAAK,CAAC,kCAA2B,KAAK,CAAC,OAAO,CAAE,CAAC,CAAC;YAChE,CAAC;;;;CACJ\"}","dts":{"name":"/Users/sun/lopaka_cloud/tools/truetype2gfx/types/index.d.ts","writeByteOrderMark":false,"text":"/**\n * Converts a font File into an Adafruit_GFX-compatible font File.\n *\n * @param inputFile - The input font File (TTF, OTF, WOFF).\n * @param pixelHeight - Desired font height in pixels. Defaults to 12.\n * @returns A Promise that resolves to the output File containing the Adafruit_GFX font.\n */\nexport declare function truetype2gfx(inputFile: File, pixelHeight?: number): Promise<File>;\n"}}
